{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\socce\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Experience from \"./js/views/Experience\";\nimport LandingPage from \"./js/views/LandingPage\";\nimport Hamburger from \"./js/components/Hamburger\";\nimport AboutMe from \"./js/views/AboutMe\";\nimport { ParallaxProvider } from \"react-scroll-parallax\";\nimport \"./styles/App.scss\";\nimport { gsap } from \"gsap\";\nimport { Route } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nwindow.onscroll = function () {\n  var currentScrollPos = window.pageYOffset;\n  let downloadButton = document.getElementById(\"download-button\"); // 20 is an arbitrary number here, just to make you think if you need the prevScrollpos variable:\n\n  if (currentScrollPos > 20) {\n    // I am using 'display' instead of 'top':\n    document.getElementById(\"logo\").style.top = \"-50px\";\n  } else {\n    document.getElementById(\"logo\").style.top = \"50px\";\n  }\n\n  if (downloadButton && currentScrollPos > 20) {\n    downloadButton.style.top = \"-70px\";\n  } else if (downloadButton && currentScrollPos < 20) {\n    downloadButton.style.top = \"42px\";\n  } // console.log(window.screen.width, \"HELLO\");\n\n\n  if (window.screen.width <= 1199 && window.screen.width > 575) {\n    console.log(\"triggered\");\n    let navbar = document.getElementById(\"navbar\");\n\n    if (currentScrollPos > 20) {\n      // I am using 'display' instead of 'top':\n      navbar.style.top = \"-70px\";\n    } else {\n      navbar.style.top = \"50px\";\n    }\n  }\n\n  if (window.screen.width <= 575) {\n    let hamburger = document.getElementById(\"hamburger-menu\");\n\n    if (currentScrollPos > 20) {\n      // I am using 'display' instead of 'top':\n      hamburger.style.left = \"-70px\";\n    } else {\n      hamburger.style.left = \"40px\";\n    }\n  }\n};\n\nconst pageTransition = node => {\n  var tl = gsap.timeline();\n  tl.to(\".loading-screen\", {\n    duration: 1,\n    width: \"100%\",\n    left: \"0%\",\n    ease: \"Expo.easeInOut\"\n  });\n  tl.to(\".loading-screen\", {\n    duration: 0.4,\n    width: \"100%\",\n    opacity: 0,\n    left: \"100%\",\n    ease: \"Expo.easeOut\",\n    delay: 0\n  });\n  tl.set(\".loading-screen\", {\n    left: \"-100%\",\n    opacity: 1\n  });\n};\n\nconst App = () => {\n  const routes = [{\n    path: \"/\",\n    name: \"landing\",\n    Component: LandingPage\n  }, {\n    path: \"/experience\",\n    name: \"experience\",\n    Component: Experience\n  }, {\n    path: \"/aboutme\",\n    name: \"aboutme\",\n    Component: AboutMe\n  }];\n\n  const onEnter = node => {\n    gsap.from([node.children[0]], 0.6, {\n      y: 0,\n      delay: 1.5,\n      ease: \"power3.InOut\",\n      opacity: 0\n    });\n  }; // const GetALaptop = () => {\n  //   console.log(window.screen.width);\n  //   return (\n  //     <div className=\"get-a-laptop\">\n  //       <h2>View this site on a bigger screen. Please.</h2>\n  //       <div\n  //         className=\"alright\"\n  //         onClick={() => {\n  //           setShowScreen(false);\n  //         }}\n  //       >\n  //         <p>I'll do that later</p>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n  // const [showScreen, setShowScreen] = useState(true);\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Matt Ly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hamburger, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParallaxProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: routes.map(_ref => {\n          let {\n            path,\n            name,\n            Component\n          } = _ref;\n          return name === \"aboutme\" ? /*#__PURE__*/_jsxDEV(Route, {\n            path: path,\n            exact: true,\n            children: _ref2 => {\n              let {\n                match\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(CSSTransition, {\n                in: match !== null,\n                timeout: 500,\n                classNames: \"page\",\n                unmountOnExit: true,\n                onEnter: onEnter,\n                onExit: pageTransition,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"page\",\n                  children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this);\n            }\n          }, \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Route, {\n            path: path,\n            exact: true,\n            children: _ref3 => {\n              let {\n                match\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(CSSTransition, {\n                in: match !== null,\n                timeout: 500,\n                classNames: \"page\",\n                unmountOnExit: true,\n                onEnter: onEnter,\n                onExit: pageTransition,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"page\",\n                  children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this);\n            }\n          }, \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/socce/my-app/src/App.js"],"names":["React","Experience","LandingPage","Hamburger","AboutMe","ParallaxProvider","gsap","Route","CSSTransition","NavLink","window","onscroll","currentScrollPos","pageYOffset","downloadButton","document","getElementById","style","top","screen","width","console","log","navbar","hamburger","left","pageTransition","node","tl","timeline","to","duration","ease","opacity","delay","set","App","routes","path","name","Component","onEnter","from","children","y","map","match"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Experience from \"./js/views/Experience\";\nimport LandingPage from \"./js/views/LandingPage\";\nimport Hamburger from \"./js/components/Hamburger\";\nimport AboutMe from \"./js/views/AboutMe\";\nimport { ParallaxProvider } from \"react-scroll-parallax\";\nimport \"./styles/App.scss\";\nimport { gsap } from \"gsap\";\nimport { Route } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { NavLink } from \"react-router-dom\";\n\nwindow.onscroll = function () {\n  var currentScrollPos = window.pageYOffset;\n  let downloadButton = document.getElementById(\"download-button\");\n\n  // 20 is an arbitrary number here, just to make you think if you need the prevScrollpos variable:\n  if (currentScrollPos > 20) {\n    // I am using 'display' instead of 'top':\n    document.getElementById(\"logo\").style.top = \"-50px\";\n  } else {\n    document.getElementById(\"logo\").style.top = \"50px\";\n  }\n\n  if (downloadButton && currentScrollPos > 20) {\n    downloadButton.style.top = \"-70px\";\n  } else if (downloadButton && currentScrollPos < 20) {\n    downloadButton.style.top = \"42px\";\n  }\n\n  // console.log(window.screen.width, \"HELLO\");\n\n  if (window.screen.width <= 1199 && window.screen.width > 575) {\n    console.log(\"triggered\");\n    let navbar = document.getElementById(\"navbar\");\n    if (currentScrollPos > 20) {\n      // I am using 'display' instead of 'top':\n      navbar.style.top = \"-70px\";\n    } else {\n      navbar.style.top = \"50px\";\n    }\n  }\n\n  if (window.screen.width <= 575) {\n    let hamburger = document.getElementById(\"hamburger-menu\");\n    if (currentScrollPos > 20) {\n      // I am using 'display' instead of 'top':\n      hamburger.style.left = \"-70px\";\n    } else {\n      hamburger.style.left = \"40px\";\n    }\n  }\n};\n\nconst pageTransition = (node) => {\n  var tl = gsap.timeline();\n\n  tl.to(\".loading-screen\", {\n    duration: 1,\n    width: \"100%\",\n    left: \"0%\",\n    ease: \"Expo.easeInOut\",\n  });\n\n  tl.to(\".loading-screen\", {\n    duration: 0.4,\n    width: \"100%\",\n    opacity: 0,\n    left: \"100%\",\n    ease: \"Expo.easeOut\",\n    delay: 0,\n  });\n  tl.set(\".loading-screen\", { left: \"-100%\", opacity: 1 });\n};\n\nconst App = () => {\n  const routes = [\n    { path: \"/\", name: \"landing\", Component: LandingPage },\n    { path: \"/experience\", name: \"experience\", Component: Experience },\n    { path: \"/aboutme\", name: \"aboutme\", Component: AboutMe },\n  ];\n\n  const onEnter = (node) => {\n    gsap.from([node.children[0]], 0.6, {\n      y: 0,\n      delay: 1.5,\n      ease: \"power3.InOut\",\n      opacity: 0,\n    });\n  };\n  // const GetALaptop = () => {\n  //   console.log(window.screen.width);\n  //   return (\n  //     <div className=\"get-a-laptop\">\n  //       <h2>View this site on a bigger screen. Please.</h2>\n  //       <div\n  //         className=\"alright\"\n  //         onClick={() => {\n  //           setShowScreen(false);\n  //         }}\n  //       >\n  //         <p>I'll do that later</p>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n  // const [showScreen, setShowScreen] = useState(true);\n\n  return (\n    <React.Fragment>\n      <div className=\"load-container\">\n        <div className=\"loading-screen\"></div>\n      </div>\n      <div id=\"logo\">\n        <NavLink to=\"/\" exact>\n          <p>Matt Ly</p>\n        </NavLink>\n      </div>\n      {/* {window.screen.width < 768 && showScreen ? <GetALaptop /> : undefined} */}\n\n      <Hamburger />\n\n      <ParallaxProvider>\n        <div className=\"App\">\n          {routes.map(({ path, name, Component }) => {\n            return name === \"aboutme\" ? (\n              <Route key=\"name\" path={path} exact>\n                {({ match }) => (\n                  <CSSTransition\n                    in={match !== null}\n                    timeout={500}\n                    classNames=\"page\"\n                    unmountOnExit\n                    onEnter={onEnter}\n                    onExit={pageTransition}\n                  >\n                    <div className=\"page\">\n                      <Component />\n                    </div>\n                  </CSSTransition>\n                )}\n              </Route>\n            ) : (\n              <Route key=\"name\" path={path} exact>\n                {({ match }) => (\n                  <CSSTransition\n                    in={match !== null}\n                    timeout={500}\n                    classNames=\"page\"\n                    unmountOnExit\n                    onEnter={onEnter}\n                    onExit={pageTransition}\n                  >\n                    <div className=\"page\">\n                      <Component />\n                    </div>\n                  </CSSTransition>\n                )}\n              </Route>\n            );\n          })}\n        </div>\n      </ParallaxProvider>\n    </React.Fragment>   \n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}