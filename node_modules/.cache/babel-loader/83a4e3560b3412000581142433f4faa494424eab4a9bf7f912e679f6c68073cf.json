{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\socce\\\\Desktop\\\\Websites\\\\Spotify Project\\\\spotify_app\\\\src\\\\js\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import ReactModal from 'react-modal';\nimport arrow_right from \"../../static/media/arrow.svg\";\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport UserProfile from \"../../js/components/UserProfile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTH_URL = \"https://accounts.spotify.com/authorize\";\nconst CLIENT_ID = \"e1fbd36d01ee46249c7043c1aa6731c0\";\nconst REDIRECT_URI = \"http://localhost:3000/callback\";\nconst SCOPES = [\"user-read-private\", \"user-read-email\"];\nconst Login = () => {\n  _s();\n  const handleLogin = () => {\n    const queryParams = new URLSearchParams({\n      client_id: CLIENT_ID,\n      redirect_uri: REDIRECT_URI,\n      scope: SCOPES.join(\" \"),\n      response_type: \"code\"\n    });\n    const loginUrl = `${AUTH_URL}?${queryParams}`;\n    window.location.replace(loginUrl);\n  };\n  const [accessToken, setAccessToken] = useState(null);\n  const handleAccessToken = token => {\n    setAccessToken(token);\n  };\n\n  // Check if the URL contains an authorization code after Spotify login\n  const code = new URLSearchParams(window.location.search).get(\"code\");\n  if (code) {\n    axios.post(\"/api/login\", {\n      code\n    }).then(response => {\n      console.log(response.data);\n    });\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/callback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: accessToken ? /*#__PURE__*/_jsxDEV(UserProfile, {\n      accessToken: accessToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Login with Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 72\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-button\",\n    onClick: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Login with Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: arrow_right,\n      alt: \"\",\n      className: \"arrow-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"byymgQvS0XlwfHFw30nZTov/dhE=\");\n_c = Login;\nexport default Login;\n\n// function LoginButton() {\n// const [isOpen, setIsOpen] = useState(false);\n// return (\n//     <div>\n//         <div className=\"login-button\" onClick={() => setIsOpen(true)}>\n//             <p>Sign In to Spotify</p>\n//             <img src={arrow_right} alt=\"\" className=\"arrow-right\" />\n//         </div>\n//         <div>\n//             <ReactModal className=\"modal-size\" \n//                 isOpen={isOpen}\n//                 contentLabel=\"Example Modal\"\n//                 onRequestClose={() => setIsOpen(false)}\n//             >\n//                 <div className=\"modal\">\n//                     <form>\n//                         <label>Enter your name:\n//                             <input type=\"text\" />\n//                         </label>\n//                     </form>\n//                     <form>\n//                         <label>Enter your name:\n//                             <input type=\"text\" />\n//                         </label>\n//                     </form>\n//                 </div>\n//             </ReactModal>\n//         </div>\n//     </div>\n// );\n// }\n// \n// export default LoginButton;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","arrow_right","Redirect","axios","UserProfile","jsxDEV","_jsxDEV","AUTH_URL","CLIENT_ID","REDIRECT_URI","SCOPES","Login","_s","handleLogin","queryParams","URLSearchParams","client_id","redirect_uri","scope","join","response_type","loginUrl","window","location","replace","accessToken","setAccessToken","handleAccessToken","token","code","search","get","post","then","response","console","log","data","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/socce/Desktop/Websites/Spotify Project/spotify_app/src/js/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import ReactModal from 'react-modal';\r\nimport arrow_right from \"../../static/media/arrow.svg\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport UserProfile from \"../../js/components/UserProfile\";\r\n\r\n\r\nconst AUTH_URL = \"https://accounts.spotify.com/authorize\";\r\nconst CLIENT_ID = \"e1fbd36d01ee46249c7043c1aa6731c0\";\r\nconst REDIRECT_URI = \"http://localhost:3000/callback\";\r\nconst SCOPES = [\"user-read-private\", \"user-read-email\"];\r\n\r\nconst Login = () => {\r\n    const handleLogin = () => {\r\n        const queryParams = new URLSearchParams({\r\n            client_id: CLIENT_ID,\r\n            redirect_uri: REDIRECT_URI,\r\n            scope: SCOPES.join(\" \"),\r\n            response_type: \"code\",\r\n        });\r\n\r\n        const loginUrl = `${AUTH_URL}?${queryParams}`;\r\n        window.location.replace(loginUrl);\r\n    };\r\n\r\n    const [accessToken, setAccessToken] = useState(null);\r\n\r\n    const handleAccessToken = (token) => {\r\n        setAccessToken(token);\r\n    }; \r\n\r\n    // Check if the URL contains an authorization code after Spotify login\r\n    const code = new URLSearchParams(window.location.search).get(\"code\");\r\n    if (code) {\r\n        axios.post(\"/api/login\", { code }).then((response) => {\r\n        console.log(response.data);\r\n        });\r\n        return <Redirect to=\"/callback\" />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {accessToken ? <UserProfile accessToken={accessToken} /> : <div>Login with Spotify</div>}\r\n        </div>,\r\n        <div className=\"login-button\" onClick={handleLogin}>\r\n            <p>Login with Spotify</p>\r\n            <img src={arrow_right} alt=\"\" className=\"arrow-right\" />\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\n// function LoginButton() {\r\n    // const [isOpen, setIsOpen] = useState(false);\r\n    // return (\r\n    //     <div>\r\n    //         <div className=\"login-button\" onClick={() => setIsOpen(true)}>\r\n    //             <p>Sign In to Spotify</p>\r\n    //             <img src={arrow_right} alt=\"\" className=\"arrow-right\" />\r\n    //         </div>\r\n    //         <div>\r\n    //             <ReactModal className=\"modal-size\" \r\n    //                 isOpen={isOpen}\r\n    //                 contentLabel=\"Example Modal\"\r\n    //                 onRequestClose={() => setIsOpen(false)}\r\n    //             >\r\n    //                 <div className=\"modal\">\r\n    //                     <form>\r\n    //                         <label>Enter your name:\r\n    //                             <input type=\"text\" />\r\n    //                         </label>\r\n    //                     </form>\r\n    //                     <form>\r\n    //                         <label>Enter your name:\r\n    //                             <input type=\"text\" />\r\n    //                         </label>\r\n    //                     </form>\r\n    //                 </div>\r\n    //             </ReactModal>\r\n    //         </div>\r\n    //     </div>\r\n    // );\r\n// }\r\n// \r\n// export default LoginButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}